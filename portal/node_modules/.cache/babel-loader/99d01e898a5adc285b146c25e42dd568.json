{"ast":null,"code":"import * as singleSpa from \"single-spa\";\nimport * as SystemJS from \"systemjs\";\n/**\n * runScript 一个promise同步方法。可以代替创建一个script标签，然后加载服务\n * @param  {string}         url         请求文件地址\n */\n\nconst runScript = async url => {\n  // 加载css同理\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n    script.onload = resolve;\n    script.onerror = reject;\n    const firstScript = document.getElementsByTagName(\"script\")[0];\n    firstScript.parentNode.insertBefore(script, firstScript);\n  });\n}; // 注册微前端服务\n\n/* \n    注册所用函数;\n    return 一个模块对象（singleSpa），模块对象来自于要加载的js导出（子项目）;\n    如果这个函数不需要在线引入，只需要本地引入一块加载：\n    () => import('xxx/main.js')\n*/\n\n\nsingleSpa.registerApplication(\"vue\", () => SystemJS.import('single-spa'), // 配置微前端模块前缀\n// 纯函数根据参数查看是否处于活动状态\nsingleSpa.pathToActiveWhen(\"/vue\"));\nsingleSpa.registerApplication(\"react\", async () => {\n  await runScript(\"http://localhost:3001/app3.js\");\n  await runScript(\"http://localhost:3001/static/js/vendors~main.chunk.js\");\n  await runScript(\"http://localhost:3001/static/js/main.chunk.js\");\n}, location => location.pathname.startsWith(\"/react\"));\nsingleSpa.start(); // 启动","map":{"version":3,"sources":["/home/lhj/learn/code/micro-frontend/single-spa-demo/portal/src/singleSpa.js"],"names":["singleSpa","SystemJS","runScript","url","Promise","resolve","reject","script","document","createElement","src","onload","onerror","firstScript","getElementsByTagName","parentNode","insertBefore","registerApplication","import","pathToActiveWhen","location","pathname","startsWith","start"],"mappings":"AAAA,OAAO,KAAKA,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,MAAOC,GAAP,IAAe;AAC7B;AACA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACG,GAAP,GAAaP,GAAb;AACAI,IAAAA,MAAM,CAACI,MAAP,GAAgBN,OAAhB;AACAE,IAAAA,MAAM,CAACK,OAAP,GAAiBN,MAAjB;AACA,UAAMO,WAAW,GAAGL,QAAQ,CAACM,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAApB;AACAD,IAAAA,WAAW,CAACE,UAAZ,CAAuBC,YAAvB,CAAoCT,MAApC,EAA4CM,WAA5C;AACH,GAPM,CAAP;AAQH,CAVD,C,CAYA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAb,SAAS,CAACiB,mBAAV,CACI,KADJ,EAEI,MAAMhB,QAAQ,CAACiB,MAAT,CAAgB,YAAhB,CAFV,EAGI;AACA;AACAlB,SAAS,CAACmB,gBAAV,CAA2B,MAA3B,CALJ;AAOAnB,SAAS,CAACiB,mBAAV,CACI,OADJ,EAEI,YAAY;AACR,QAAMf,SAAS,CAAC,+BAAD,CAAf;AACA,QAAMA,SAAS,CAAC,uDAAD,CAAf;AACA,QAAMA,SAAS,CAAC,+CAAD,CAAf;AACH,CANL,EAOKkB,QAAD,IAAcA,QAAQ,CAACC,QAAT,CAAkBC,UAAlB,CAA6B,QAA7B,CAPlB;AAUAtB,SAAS,CAACuB,KAAV,G,CAAmB","sourcesContent":["import * as singleSpa from \"single-spa\";\nimport * as SystemJS from \"systemjs\"\n\n/**\n * runScript 一个promise同步方法。可以代替创建一个script标签，然后加载服务\n * @param  {string}         url         请求文件地址\n */\n\nconst runScript = async (url) => {\n    // 加载css同理\n    return new Promise((resolve, reject) => {\n        const script = document.createElement(\"script\");\n        script.src = url;\n        script.onload = resolve;\n        script.onerror = reject;\n        const firstScript = document.getElementsByTagName(\"script\")[0];\n        firstScript.parentNode.insertBefore(script, firstScript);\n    });\n};\n\n// 注册微前端服务\n/* \n    注册所用函数;\n    return 一个模块对象（singleSpa），模块对象来自于要加载的js导出（子项目）;\n    如果这个函数不需要在线引入，只需要本地引入一块加载：\n    () => import('xxx/main.js')\n*/\nsingleSpa.registerApplication(\n    \"vue\",\n    () => SystemJS.import('single-spa'),\n    // 配置微前端模块前缀\n    // 纯函数根据参数查看是否处于活动状态\n    singleSpa.pathToActiveWhen(\"/vue\")\n);\nsingleSpa.registerApplication(\n    \"react\",\n    async () => {\n        await runScript(\"http://localhost:3001/app3.js\");\n        await runScript(\"http://localhost:3001/static/js/vendors~main.chunk.js\");\n        await runScript(\"http://localhost:3001/static/js/main.chunk.js\");\n    },\n    (location) => location.pathname.startsWith(\"/react\")\n);\n\nsingleSpa.start(); // 启动\n"]},"metadata":{},"sourceType":"module"}